{"version":3,"sources":["/home/mrhorse/Desktop/github/PlaticasTalleres/2018/real-time-chat/components/ChatBox/index.js"],"names":["ChatBox","props","state","inputValue","typing","handleSubmit","bind","handleInputChange","updateTyping","event","preventDefault","socket","emit","message","refs","value","setState","target","console","log","typingMaxTime","connected","lastTypingTime","Date","getTime","setTimeout","typingTimer","timeDiff","marginLeft","marginRight","messages","map","msg","key","userName"],"mappings":"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","file":"4.2b493cbbbb1574526324.hot-update.js","sourcesContent":["import React, { Component } from 'react'\nimport Message from './message'\nimport {Container, Row, Col} from 'react-grid-system'\n\nexport default class ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      typing: false\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.updateTyping = this.updateTyping.bind(this)\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.socket.emit('new message', this.state.inputValue)\n    let message = this.refs.message.value;\n    this.setState({\n      inputValue: ''\n    })\n  }\n\n  handleInputChange(event) {\n    this.updateTyping()\n    this.setState({ inputValue: event.target.value });\n  }\n\n  updateTyping() {\n    console.log('setting typer')\n    let typingMaxTime = 3000 //ms\n    if(this.props.connected) {\n      if(!this.state.typing) {\n        this.setState({\n          typing: true\n        })\n        this.props.socket.emit('typing')\n      }\n      let lastTypingTime = (new Date()).getTime()\n      setTimeout(() => {\n        let typingTimer = (new Date().getTime())\n        let timeDiff = typingTimer- lastTypingTime\n        if (timeDiff >= typingMaxTime && this.state.typing) {\n          this.props.socket.emit('stop typing');\n          this.setState({\n            typing: false\n          })\n        }\n      }, typingMaxTime)\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"wrapper\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"chat-box-container\">\n            <Row className=\"Row\" style={{marginLeft: 0, marginRight: 0}}>\n              {this.props.messages.map((msg, key) => {\n                          return <Message username={msg.userName} message={msg.msg} />\n              })}\n            </Row>\n          </div>\n          <div className=\"input-container\">\n            <input type=\"text\"\n              className=\"input__field input__field--minoru\"\n              ref=\"message\"\n              onChange={this.handleInputChange}\n              value={ this.state.inputValue} />\n          </div>\n          <button type=\"submit\" className=\"button\"><span>SEND </span></button>\n        </form>\n        <style jsx>{`\n\n          .button {\n          border-radius: 4px;\n          background-color: #f49320;\n          border: none;\n          color: #FFFFFF;\n          text-align: center;\n          font-size: 28px;\n          padding: 20px;\n          width: 100%;\n          max-width: 200px;\n          transition: all 0.5s;\n          cursor: pointer;\n          margin: 5px;\n          margin-left: 15px;\n        }\n\n        .button span {\n          cursor: pointer;\n          display: inline-block;\n          position: relative;\n          transition: 0.5s;\n        }\n        span {\n          margin: 0px;\n          font-weight: 800;\n        }\n\n        .button span:after {\n          content: '\\00bb';\n          position: absolute;\n          opacity: 0;\n          top: 0;\n          right: -20px;\n          transition: 0.5s;\n          align: center;\n        }\n\n        .button:hover span {\n          padding-right: 25px;\n        }\n\n        .button:hover span:after {\n          opacity: 1;\n          right: 0;\n        }\n          .wrapper {\n            width: 100%;\n            height: 100vh;\n          },\n          .input-container {\n            margin-top: 15px;\n            width: 100%;\n          }\n          .chat-box-container {\n            width: 100%;\n            height: 80vh;\n            overflow: scroll;\n            overflow-x: hidden;\n            margin-top: 3%;\n          }\n\n          /* width */\n          ::-webkit-scrollbar {\n              width: 10px;\n          }\n\n          /* Track */\n          ::-webkit-scrollbar-track {\n              background: #276e34;\n          }\n\n          /* Handle */\n          ::-webkit-scrollbar-thumb {\n            background: #f49320;\n            border-radius: 10px;\n          }\n\n          /* Handle on hover */\n          ::-webkit-scrollbar-thumb:hover {\n              background: #b30000;\n          }\n\n          input {\n            height: 34px;\n            width: 100%;\n            border-radius: 3px;\n            border: 1px solid transparent;\n            border-top: none;\n            border-bottom: 1px solid #DDD;\n            box-shadow: inset 0 1px 2px rgba(0,0,0,.39), 0 -1px 1px #red, 0 1px 0 #red;\n          }\n\n          .input__field {\n          \tfloat: left;\n          \tpadding: 0.8em;\n          \twidth: 75%;\n            font-size: 17px;\n          \tborder: none;\n          \tborder-radius: 4px;\n          \tbackground: #f0f0f0;\n          \tcolor: #black;\n          \tfont-weight: bold;\n          \tfont-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n          \t-webkit-appearance: none; /* for box shadows to show on iOS */\n          }\n\n        `}\n        </style>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/ChatBox/index.js"],"sourceRoot":""}